<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steve Good </title>
    <link>http://www.stevegood.rocks/tags/ios/index.xml</link>
    <language>en-us</language>
    <author></author>
    <rights>(C) 2016</rights>
    <updated>0001-01-01 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Uploading an image from iOS 5</title>
          <link>http://www.stevegood.rocks/post/2012/02/23/uploading-an-image-from-ios-5/</link>
          <pubDate>Thu, 23 Feb 2012 00:00:00 UTC</pubDate>
          <author></author>
          <guid>http://www.stevegood.rocks/post/2012/02/23/uploading-an-image-from-ios-5/</guid>
          <description>&lt;p&gt;Lately I&amp;rsquo;ve been working steadily towards getting an iOS app released for my company, &lt;a href=&#34;http://kainexus.com/&#34;&gt;KaiNexus&lt;/a&gt;.  The first pass at this app will have the basic ability to submit an idea from your phone and be able to attach a picture.  Since I am still a novice with Objective-C it was no surprise when I ran into a brick wall when trying to upload the image from the app.  This prompted me to&lt;a href=&#34;http://stackoverflow.com/questions/9419744/uploading-an-image-from-ios-to-grails&#34;&gt; ask on stackoverflow&lt;/a&gt; to see what I had done wrong.&lt;/p&gt;

&lt;p&gt;As it turns out, I was using an incorrect combination of line endings and content types.  I now have working code in my app and figured I would share it so that anyone else running into this problem would have a starting point.  Below is the function I wrote to handle uploading an image in Objective-C on iOS 5 (the grails pieces can be found on the &lt;a href=&#34;http://stackoverflow.com/questions/9419744/uploading-an-image-from-ios-to-grails&#34;&gt;SO question&lt;/a&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Objective-C&#34;&gt;+ (BOOL)uploadImage:(UIImage *)image withName:(NSString *)fileName toURL:(NSURL *)url {
    NSData *imageData = UIImageJPEGRepresentation(image, 100);
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];
    [request setHTTPMethod:@&amp;quot;POST&amp;quot;];

    NSString *boundary = @&amp;quot;0x0hHai1CanHazB0undar135&amp;quot;;
    NSString *contentType = [NSString stringWithFormat:@&amp;quot;multipart/form-data; boundary=%@&amp;quot;, boundary];
    [request setValue:contentType forHTTPHeaderField:@&amp;quot;Content-Type&amp;quot;];

    NSMutableData *body = [NSMutableData data];
    [body appendData:[[NSString stringWithFormat:@&amp;quot;\r\n--%@\r\n&amp;quot;,boundary] dataUsingEncoding: NSUTF8StringEncoding]];
    [body appendData:[[NSString stringWithFormat:@&amp;quot;Content-Disposition: form-data; name=\&amp;quot;imageToAttach\&amp;quot;; filename=\&amp;quot;%@\&amp;quot;\r\n&amp;quot;,fileName]dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[[NSString stringWithFormat:@&amp;quot;Content-Type: image/jpeg\r\n\r\n&amp;quot;] dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:imageData];
    [body appendData:[[NSString stringWithFormat:@&amp;quot;\r\n--%@--\r\n&amp;quot;,boundary] dataUsingEncoding:NSUTF8StringEncoding]];
    [request setHTTPBody:body];

    NSData *returnData = [NSURLConnection sendSynchronousRequest:request returningResponse:nil error:nil];
    NSString *returnString = [[NSString alloc] initWithData:returnData encoding:NSUTF8StringEncoding];

    NSLog(@&amp;quot;%@&amp;quot;,returnString);

    return YES;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    

  </channel>
</rss>
